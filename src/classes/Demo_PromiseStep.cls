/**
 * Created by kpoorman on 1/16/17.
 * This is an example promise Step. In this class, you can do anything Apex allows.
 * Including making callouts to web services. When this step's resolve method is called
 * by the promise chain, it will automatically pass into this class the output of the
 * previous step in the form of the incomingObject parameter.
 * Ensure that your resolve method returns a Promise.SerializableData object so that
 * the next step will have access to the information generated by this step.
 */

Public Class Demo_PromiseStep implements Promise.PromiseStep{

  @TestVisible
  Private Integer checkInteger; // helpful for testing. not generally needed.
  // this is the required method for a PromiseStep class.
  Public Promise.SerializableData resolve(Object incomingObject){
    // Do some aysnchronous work, in this case, we'll pretend it's in
    // our helper method:
    checkInteger = exampleHelperMethod();
    // Your return value just be serializable as JSON, and you have to pass
    // both the object, and it's class
    return new Promise.SerializableData(checkInteger, Integer.class);
  }

  // helper methods
  // I put this in a helper method not out of neccessity but because it illustrates that
  // this is a normal class, and you can have multiple methods and architect this class
  // in a way that code is easily testable, and isolated.
  private Integer exampleHelperMethod(){
    return Crypto.getRandomInteger();
  }

}